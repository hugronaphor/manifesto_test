<?php

/**
 * @file
 * Contains manifesto_test.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\User;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add the description to the Title field of Article Content Type
 * in case the current user don't have "Administrator" role.
 */
function manifesto_test_form_node_form_alter(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\node\Entity\Node $node */
  $node = $form_state->getFormObject()->getEntity();

  if ($node->bundle() == 'article_manifesto' &&
    !User::load(\Drupal::currentUser()->id())->hasRole('administrator')) {
    $form['title']['widget'][0]['value']['#description'] =
      t('Lorem ipsum dolor sit amet, consectetur adipiscing elit.');
  }
}

/**
 * Implements hook_theme().
 */
function manifesto_test_theme() {
  return [
    'manifesto_test_weather' => [
      'variables' => [],
    ],
  ];
}

/**
 * Implements hook_entity_extra_field_info().
 *
 * Define Postcode pseudo field.
 */
function manifesto_test_entity_extra_field_info() {
  $extra_field = [];

  $extra_field['node']['article_manifesto']['display']['postcode_value'] = [
    'label' => t('Postcode - Pseudo field'),
    'weight' => 1,
    'visible' => TRUE,
  ];

  return $extra_field;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 *
 * Render postcode pseudo field.
 */
function manifesto_test_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($view_mode != 'full') {
    return FALSE;
  }

  if (!$display->getComponent('postcode_value')) {
    return FALSE;
  }

  if (!$entity->hasField('field_postcode')) {
    return FALSE;
  }

  $fieldVal = $entity->get('field_postcode')->getValue();
  if (!empty($fieldVal[0]['value'])) {
    $build['postcode_value'] = [
      '#plain_text' => $fieldVal[0]['value'],
    ];
  }

}
